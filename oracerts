#!/bin/bash
#---------------------------------------------------------------------------------------------------------------#
# Certificate Utility Script for Oracle public key infrastructure (orapki).                                     #
# This script is licenced under GPLv3 ; you can get your copy from https://www.gnu.org/licenses/gpl-3.0.en.html #
# (C) Omkar Dhekne ; ogdhekne@yahoo.in ; github: https://github.com/ogdhekne                                    #
#---------------------------------------------------------------------------------------------------------------#

# -- ENV:
    export cert_base=""
    export file_name=""


# -- COLORS:

	export RESET="\e[0m"
	export GRAY="\e[100m"

# -- FUNC:

    add()
    {
        cat <<EOF
  +---------------------+
  +  oracerts Utility:  +
  +---------------------+

EOF
        read -p "Enter base location of SSL certificates: " cert_base

        echo ""

        read -p "Enter file name of .p7b extension: " file_name
        
        #openssl pkcs7 -print_certs -in certificatename.p7b -out certificatename.cer

        #openssl pkcs7 -print_certs -in $cert_base/$file_name -out $cert_base/${file_name%????}.cer

        openssl pkcs7 -print_certs -in $cert_base/$file_name -out $cert_base/${file_name::-4}.cer

        keytool -import -trustcacerts -alias hyfi_1 -file Hyfi_certificate.crt -keystore Hyfi_certificate.jks

        orapki wallet add -wallet /d01/oracle/PROD/db/tech_st/12.1.0/wallet -trusted_cert -cert "/d01/oracle/cert/Hyfi_certificate.jks" -pwd W@llet$01

        orapki wallet jks_to_pkcs12 -wallet /d01/oracle/PROD/db/tech_st/12.1.0/wallet -pwd W@llet$01 -keystore /d01/oracle/cert/Hyfi_certificate.jks -jkspwd xor1246# -jsafe

        
    }

    delete()
    {
        echo ""
    }

    status()
    {
        echo ""
    }

    display()
    {
        orapki wallet display -wallet . -pwd W@llet$01  -jsafe
    }

    help()
    {
        cat <<EOF
  +---------------------+
  +  oracerts Utility:  +
  +---------------------+

  add:      ./oracerts add 
  delete:   ./oracerts delete 
  status:   ./oracerts status 
  display:  ./oracerts display
  help:     ./oracerts help
EOF
    }

# If no commandline argument is passed then print help.
    if [[ -z $1 ]]
    then
        help
    else
        $1
    fi